#!/bin/bash

# üì± Script de Instalaci√≥n Autom√°tica para OPPO Reno 13 5G
# Soluciona el problema "no es analizable" usando ADB

echo "üöÄ INSTALADOR AUTOM√ÅTICO PARA OPPO RENO 13 5G"
echo "=============================================="
echo ""

# Verificar si ADB est√° instalado
if ! command -v adb &> /dev/null; then
    echo "‚ùå ERROR: ADB no est√° instalado"
    echo "üì• Descarga Android SDK Platform Tools desde:"
    echo "   https://developer.android.com/studio/releases/platform-tools"
    exit 1
fi

# Verificar si el APK existe
APK_FILE="app/build/outputs/apk/debug/app-debug.apk"
if [ ! -f "$APK_FILE" ]; then
    echo "‚ùå ERROR: No se encontr√≥ el APK en $APK_FILE"
    echo "üîç Buscando APK en otras ubicaciones..."
    
    # Buscar APK en diferentes ubicaciones
    APK_FOUND=false
    for file in $(find . -name "*.apk" -type f 2>/dev/null); do
        echo "üì± APK encontrado: $file"
        APK_FILE="$file"
        APK_FOUND=true
        break
    done
    
    if [ "$APK_FOUND" = false ]; then
        echo "‚ùå No se encontr√≥ ning√∫n APK en el directorio actual"
        echo "üí° Aseg√∫rate de que el APK est√© en el directorio o comp√≠lalo primero"
        exit 1
    fi
fi

echo "‚úÖ APK encontrado: $APK_FILE"
echo ""

# Verificar conexi√≥n del dispositivo
echo "üì± Verificando conexi√≥n del dispositivo..."
adb devices

# Verificar si hay dispositivos conectados
DEVICES=$(adb devices | grep -v "List of devices" | grep -v "^$" | wc -l)
if [ "$DEVICES" -eq 0 ]; then
    echo "‚ùå ERROR: No hay dispositivos Android conectados"
    echo ""
    echo "üîß SOLUCI√ìN:"
    echo "1. Conecta tu OPPO Reno 13 5G por USB"
    echo "2. Activa 'Depuraci√≥n USB' en Opciones de desarrollador"
    echo "3. Acepta la autorizaci√≥n en tu tel√©fono"
    echo "4. Ejecuta este script nuevamente"
    exit 1
fi

echo "‚úÖ Dispositivo conectado correctamente"
echo ""

# Mostrar informaci√≥n del dispositivo
echo "üìä Informaci√≥n del dispositivo:"
adb shell getprop ro.product.model
adb shell getprop ro.build.version.release
echo ""

# Verificar si es un OPPO
MODEL=$(adb shell getprop ro.product.model)
if [[ "$MODEL" == *"OPPO"* ]] || [[ "$MODEL" == *"Reno"* ]]; then
    echo "‚úÖ Dispositivo OPPO detectado: $MODEL"
    echo "üîß Aplicando configuraciones espec√≠ficas para ColorOS..."
    echo ""
else
    echo "‚ö†Ô∏è  Dispositivo no identificado como OPPO: $MODEL"
    echo "üí° Continuando con instalaci√≥n est√°ndar..."
    echo ""
fi

# Configuraciones espec√≠ficas para OPPO/ColorOS
echo "üîß Configurando permisos espec√≠ficos para OPPO..."

# Desactivar verificaci√≥n de seguridad temporalmente
echo "üõ°Ô∏è  Desactivando verificaci√≥n de seguridad..."
adb shell settings put global package_verifier_enable 0

# Permitir instalaci√≥n de fuentes desconocidas
echo "üîì Configurando fuentes desconocidas..."
adb shell settings put secure install_non_market_apps 1

# Configurar permisos de instalaci√≥n
echo "üì¶ Configurando permisos de instalaci√≥n..."
adb shell pm grant com.android.packageinstaller android.permission.REQUEST_INSTALL_PACKAGES

echo "‚úÖ Configuraciones aplicadas"
echo ""

# Intentar instalaci√≥n
echo "üì• Instalando APK..."
echo "üìÅ Archivo: $APK_FILE"
echo ""

# Instalaci√≥n con opciones espec√≠ficas para OPPO
echo "üîÑ Intento 1: Instalaci√≥n est√°ndar..."
if adb install "$APK_FILE"; then
    echo "‚úÖ ¬°INSTALACI√ìN EXITOSA!"
    SUCCESS=true
else
    echo "‚ö†Ô∏è  Instalaci√≥n est√°ndar fall√≥, intentando m√©todo alternativo..."
    
    echo "üîÑ Intento 2: Instalaci√≥n forzada..."
    if adb install -r -d "$APK_FILE"; then
        echo "‚úÖ ¬°INSTALACI√ìN EXITOSA con m√©todo forzado!"
        SUCCESS=true
    else
        echo "‚ö†Ô∏è  Instalaci√≥n forzada fall√≥, intentando √∫ltimo m√©todo..."
        
        echo "üîÑ Intento 3: Instalaci√≥n sin verificaci√≥n..."
        if adb install --bypass-low-target-sdk-block "$APK_FILE"; then
            echo "‚úÖ ¬°INSTALACI√ìN EXITOSA sin verificaci√≥n!"
            SUCCESS=true
        else
            echo "‚ùå Todos los m√©todos de instalaci√≥n fallaron"
            SUCCESS=false
        fi
    fi
fi

echo ""

if [ "$SUCCESS" = true ]; then
    echo "üéâ ¬°INSTALACI√ìN COMPLETADA!"
    echo "=============================================="
    echo ""
    echo "üì± Pr√≥ximos pasos:"
    echo "1. Abre la app 'Ritsu AI' en tu tel√©fono"
    echo "2. Configura los permisos necesarios:"
    echo "   - Accesibilidad (OBLIGATORIO)"
    echo "   - Superposici√≥n (OBLIGATORIO)"
    echo "   - Almacenamiento"
    echo "   - Micr√≥fono"
    echo "   - C√°mara"
    echo ""
    echo "3. ¬°Disfruta de tu nueva asistente kawaii! üå∏"
    echo ""
    
    # Restaurar configuraciones de seguridad
    echo "üîí Restaurando configuraciones de seguridad..."
    adb shell settings put global package_verifier_enable 1
    echo "‚úÖ Configuraciones restauradas"
    
else
    echo "‚ùå INSTALACI√ìN FALLIDA"
    echo "=============================================="
    echo ""
    echo "üîß SOLUCIONES ALTERNATIVAS:"
    echo ""
    echo "1. üì± CONFIGURACI√ìN MANUAL EN EL TEL√âFONO:"
    echo "   - Ve a Configuraci√≥n > Seguridad"
    echo "   - Desactiva 'Verificaci√≥n de seguridad'"
    echo "   - Activa 'Fuentes desconocidas'"
    echo "   - Intenta instalar manualmente"
    echo ""
    echo "2. üì• APPS ALTERNATIVAS:"
    echo "   - Descarga 'APK Installer' desde Google Play"
    echo "   - Usa esa app para instalar el APK"
    echo ""
    echo "3. üíª INSTALACI√ìN DESDE COMPUTADORA:"
    echo "   - Transfiere el APK por USB"
    echo "   - Inst√°lalo directamente desde el gestor de archivos"
    echo ""
    echo "4. üåê NAVEGADOR ALTERNATIVO:"
    echo "   - Usa Firefox en lugar de Chrome"
    echo "   - Descarga e instala desde Firefox"
    echo ""
    echo "üìû Si nada funciona, consulta la gu√≠a completa: GUIA_OPPO_RENO_13.md"
fi

echo ""
echo "‚ú® Script completado"